public class Customer
{
    public int CustId { get; set; }
    public string CustName { get; set; }
    public string ClassOfTravel { get; set; }

    public int CalculateAge()
    {
        return 30; // Replace with actual age calculation
    }
}

public class Airlines
{
    public int AirlineId { get; set; }
    public string AirlineName { get; set; }
    public double BaseFare { get; set; }

    public double CalculateServiceCharges(double baseFare)
    {
        return baseFare * 0.05;
    }

    public double CalculateTax(double baseFare)
    {
        return baseFare * 0.15;
    }

    public double CalculateFare(Customer customer)
    {
        int age = customer.CalculateAge();

        if (age <= 0 || age >= 100)
        {
            throw new InvalidAgeException();
        }

        switch (customer.ClassOfTravel)
        {
            case "Business":
                BaseFare = 10000.0;
                break;
            case "Premium":
                BaseFare = 5000.0;
                break;
            case "Economy":
                BaseFare = 1200.0;
                break;
            default:
                throw new InvalidTravelClassException();
        }

        double serviceCharges = CalculateServiceCharges(BaseFare);
        double tax = CalculateTax(BaseFare);
        double totalAmount = BaseFare + serviceCharges + tax;

        return totalAmount;
    }
}

public class InvalidTravelClassException : Exception
{
    public InvalidTravelClassException()
        : base("Invalid Class of Travel. Please choose Business, Premium, or Economy.")
    {
    }
}

public class InvalidAgeException : Exception
{
    public InvalidAgeException()
        : base("Invalid Age. Please enter a valid age between 1 and 99.")
    {
    }
}

public class Program
{
    public static void Main(string[] args)
    {
        try
        {
            Customer customer = new Customer();
            customer.CustId = 1;
            customer.CustName = "John Doe";
            customer.ClassOfTravel = "Business";

            Airlines airlines = new Airlines();

            double totalFare = airlines.CalculateFare(customer);

            Console.WriteLine($"Total Fare: {totalFare}");
        }
        catch (InvalidAgeException ex)
        {
            Console.WriteLine(ex.Message);
        }
        catch (InvalidTravelClassException ex)
        {
            Console.WriteLine(ex.Message);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An unexpected error occurred: {ex.Message}");
        }
    }
}
